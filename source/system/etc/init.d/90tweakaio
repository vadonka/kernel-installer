#!/system/bin/sh

# LG Optimus 2X AIO init script v2.3.2
# Copyright (c) by vadonka 2012
TIMESTAMP=1343144088
date=`date +%Y.%m.%d-%H.%M.%S`

# cleanup
mkdir -p /data/tweakaio/logs
deflog="/data/tweakaio/logs/tweakaio.log"

if [ -f $deflog ]; then
	rm -rf $deflog
fi
touch $deflog

# Delete COMPCACHE log
complog="/data/tweakaio/logs/compcache.log"

if [ -f $complog ]; then
	rm -f $complog
fi
touch $complog

# Read CPU1 control variables from sysfs
onminkhzmin=`cat /sys/class/misc/cpu1control/onminkhzmin | sed 's/[^0-9]//g'`
onminkhzmax=`cat /sys/class/misc/cpu1control/onminkhzmax | sed 's/[^0-9]//g'`
onminkhzdef=`cat /sys/class/misc/cpu1control/onminkhzdef | sed 's/[^0-9]//g'`
ondelaymin=`cat /sys/class/misc/cpu1control/ondelaymin | sed 's/[^0-9]//g'`
ondelaymax=`cat /sys/class/misc/cpu1control/ondelaymax | sed 's/[^0-9]//g'`
ondelaydef=`cat /sys/class/misc/cpu1control/ondelaydef | sed 's/[^0-9]//g'`
offmaxkhzmin=`cat /sys/class/misc/cpu1control/offmaxkhzmin | sed 's/[^0-9]//g'`
offmaxkhzmax=`cat /sys/class/misc/cpu1control/offmaxkhzmax | sed 's/[^0-9]//g'`
offmaxkhzdef=`cat /sys/class/misc/cpu1control/offmaxkhzdef | sed 's/[^0-9]//g'`
offdelaymin=`cat /sys/class/misc/cpu1control/offdelaymin | sed 's/[^0-9]//g'`
offdelaymax=`cat /sys/class/misc/cpu1control/offdelaymax | sed 's/[^0-9]//g'`
offdelaydef=`cat /sys/class/misc/cpu1control/offdelaydef | sed 's/[^0-9]//g'`

vibrastr=`cat /sys/devices/virtual/misc/vibratorcontrol/vibrator_strength | sed 's/[^0-9]//g'`

# Define Minfree values
def="1536,2048,4096,5120,5632,6144"
std="1536,2048,4096,7680,8960,10240"
opt="1536,2048,4096,10240,12800,15360"
str="2048,4096,8192,15360,17920,20480"
aggr="2048,4096,8192,16384,24576,30720"
extr="3072,4096,16384,38400,40960,43520"
ult="3072,4096,16384,51200,57600,64000"

carveout_size=`cat /proc/cmdline | tr ' ' '\n' | grep ^nvmem | awk -F '=' '{print $2}' | awk -F '@' '{print $1}' | sed -e s/M//`

echo "#########################################" >> $deflog
echo "## LG Optimus 2X tweak script log file ##" >> $deflog
echo "#########################################" >> $deflog
echo "##Kernel version: "`uname -r` >> $deflog
echo "##AVP Freq: "`cat /sys/class/misc/avpinfo/avpfreq`"Khz" >> $deflog
echo "##GPU Freq: "`cat /sys/class/misc/gpuinfo/gpufreq`"Khz" >> $deflog
echo "##VDE Freq: "`cat /sys/class/misc/vdeinfo/vdefreq`"Khz" >> $deflog
echo -e "##RAMhack size: $((128-$carveout_size))MB\n" >> $deflog

export parfile="/data/tweakaio/tweakaio.conf"

pfcreate()
{
echo "$date WARNING! Params file not found or invalid! Creating now..." >> $deflog
rm -rf /data/tweakaio/tweakaio.conf
cat > /data/tweakaio/tweakaio.conf <<EOF
# ATTENTION!
# Detailed information moved
# to the tweakaio_hlp.txt
# TIMESTAMP $TIMESTAMP

Reset Settings=off
# Factory settings at next reboot

Script Enabled=on
Logger Enabled=on

# LOW MEMORY KILLER MODE (aka LMK)
LMK Tweaks Enabled=on
# LMK Values are:
# def, std, opt, str, aggr, extr, ult
LMK Mode=aggr

Network Tweaks Enabled=on
Memory Management Tweaks Enabled=on
KSM Enabled=on
Compcache Enabled=off
Compcache Size (in MB)=100
Compcache Ratio (in %)=20
Cache Drop Interval Time (in hour)=4

Mount Tweaks Enabled=on
# example: deadline cfq sio
IO Scheduler=sio

Dalvik Cache Cleaner Enabled=off
SQLite3 Defrag Enabled=off
Vibrator Strength=3000
# Accepted range: 1500-3600

OTF Tweaks Enabled=on

NITRO Enabled=off
# Override all of this settings above!

Min CPU1 On Frequency=$onminkhzdef
# Accepted range: $onminkhzmin-$onminkhzmax

CPU1 On Delay Time=$ondelaydef
# Accepted range: $ondelaymin-$ondelaymax

Max CPU1 Off Frequency=$offmaxkhzdef
# Accepted range: $offmaxkhzmin-$offmaxkhzmax

CPU1 Off Delay Time=$offdelaydef
# Accepted range: $offdelaymin-$offdelaymax

EOF

# fix parfile permission
chmod 0777 /data/tweakaio/tweakaio.conf
}

pfsize=`ls -la /data/tweakaio/tweakaio.conf | awk -F " " '{print $5}' | sed 's/[^0-9]//g'`
if [ -f /data/tweakaio/tweakaio.conf ]; then
	if [ "$pfsize" == "0" ]; then
		pfcreate
	else
		CONFTIME=`grep TIMESTAMP /data/tweakaio/tweakaio.conf | awk -F " " '{ print $3 }' | sed 's/[^0-9]//g'`
		if [[ "$CONFTIME" -ne "$TIMESTAMP" ]]; then
			pfcreate
		fi
	fi
else
	pfcreate
fi

helpcreate()
{
echo "$date Help file updating..." >> $deflog
rm -rf /data/tweakaio/tweakaio_hlp.txt
cat > /data/tweakaio/tweakaio_hlp.txt <<EOF
SCRIPT MODE:
************
If this set to off the script will not run!
The tweakaio.log file overwrited at every run!

Accepted values are: on, off
Default is "on"

SYSTEM LOGGER:
**************
You can enable or disable the system logger.

Accepted values are: on, off
Default is "on"

LOW MEMORY KILLER (LMK) MODE:
*****************************
LMK Accepted values are:
def: stock values $def (CM7)
std: standard values $std
opt: optimum values $opt
str: strict values $str
aggr: aggressive values $aggr
extr: extreme values $extr
ult: ultimate values $ult

LMKMODE Accepted values are: on, off
Default is "on"
LMKVAL default is "str"

NETWORK TWEAKS:
***************
TCP/IP tweaks
Accepted values are: on, off
Default is "on"

VM MANAGEMENT AND KERNEL TWEAKS:
********************************
Compcache option pre-requiered kernel based zram support.
You can adjust the compcache/swap zram device size and cache clear interval time.

VMTWEAKS accepted values are: on, off
Default is "on"

KSM (Kernel Samepage Merging) accepted values are: on, off
Default is "on"

COMPCACHE accepted values are: on, off
Default is "off"

CS_SIZE (Compcace size) accepted values are numeric or "auto"
Default is "100" (in MiB)

CS_RATIO (Compcache ratio) accepted values are numeric, only applyed when CS_SIZE set to "auto"
Default is "20" (in %)

INTERVAL (Drop cache interval time) accepted values are numeric
Default is "4" (in hour)

MOUNT OPTION TWEAKS:
********************
Mount tweak remount all partition with noatime, nodiratime option and fine tune some IO parameters.
You can adjust the default IO scheduler too.
CM7 default scheduler is the bfq.
Its a good compromise between  the old anticipatory and the cfq scheduler
Since BFQ developement is still in progess, currently the latest version is v3r2.
Its far more better than the other schedulers so highly recommended to use BFQ.

MTWEAKS accepted values are: on, off
Default is "on"
SCHEDULER accepted values are: noop, deadline, cfq, bfq, sio
Default is "bfq"

DALVIK CACHE CLEANER:
*********************
Clean the outdated dalvik cache entries.
Modded by trev for synergykingdom additional mods by bigrushdog for Tiamat Xoom Rom
thanks Team Synergy and TrevE
you guys rock!

DALVIK_CLEANER accepted values are: on, off
Default is "off"

DEFRAG SQLITE3 DATABASES:
*************************
Defrag SQLite3 databases

SQLITE_DEFRAG accepted values are: on, off
Default is "off"

VIBRATOR CONTROL:
*****************
You can adjust the vibrator strength
Default is 3000
Range 1500-3600

SPICA OTF TWEAKS (great THX for SPICA for this!)
************************************************
On-the-fly VDEFREQ change support.
Responsible file is located in /proc/spica/vdefreq.
You can change the value in any of these both files.
Default value is 650000.
Supported Values in between 600000-700000.
Any values above 650000 will OC it w/o increasing supplying voltage.
For safety concern no values except in range will be accepted.

On-the-fly GPUFREQ change support.
Default value is 340000.
Supported Values in between 280000-400000.
Any values above 300000 will OC it w/o increasing supplying voltage.
For safety concern no values except in range will be accepted.

On-the-fly MINCPU1ON freq change support.
Means during upword scaling at what freq 2nd core will be activated.
Default value is what you see after boot.
Supported Values in between 216000-1100000.
For safety concern no values except in range will be accepted.

On-the-fly MAXCPU1OFF freq change support.
Means at what max freq 2nd core will be off during returning phaze.
Default value is what you see after boot.
Supported Values in between 216000-1100000.
For safety concern no values except in range will be accepted.

On-the-fly MaxScreenOffFreq support.
Means During screen off what will be the max freq.
Default value is what you see after boot.
Supported Values in between 216000-999000.
For safety concern no values except in range will be accepted.

Dynamic On-The-Fly "Nitros" -"Performance" mode.
It accepts two values:
"0" Disable (off)
"1" Enable. (on)
During "Nitros" Profile Kernel sets max fail-safe values
(It doesnt touch OC).
EOF
}

helpcreate

readvar()
{
SCRIPT_ENABLE=`grep "^Script Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
ENABLE_LOGGER=`grep "^Logger Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
ENABLE_LMK_TWEAK=`grep "^LMK Tweaks Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
LMK_MODE=`grep "^LMK Mode" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
ENABLE_NET_TWEAKS=`grep "^Network Tweaks Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
ENABLE_VM_TWEAKS=`grep "^Memory Management Tweaks Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
ENABLE_KSM=`grep "^KSM Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
ENABLE_COMPCACHE=`grep "^Compcache Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
COMPCACHE_SIZE=`grep "^Compcache Size" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^0-9]//g'`
COMPCACHE_RATIO=`grep "^Compcache Ratio" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^0-9]//g'`
CACHE_DROP_INTERVAL=`grep "^Cache Drop Interval Time" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^0-9]//g'`
ENABLE_MOUNT_TWEAKS=`grep "^Mount Tweaks Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
SCHEDULER=`grep "^IO Scheduler" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
ENABLE_DALVIK_CLEANER=`grep "^Dalvik Cache Cleaner Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
ENABLE_SQLITE_DEFRAG=`grep "^SQLite3 Defrag Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
VIBRA_STR=`grep "^Vibrator Strength" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^0-9]//g'`
ENABLE_OTF=`grep "^OTF Tweaks Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
onminkhz=`grep "^Min CPU1 On Frequency" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^0-9]//g'`
ondelay=`grep "^CPU1 On Delay Time" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^0-9]//g'`
offmaxkhz=`grep "^Max CPU1 Off Frequency" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^0-9]//g'`
offdelay=`grep "^CPU1 Off Delay Time" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^0-9]//g'`
ENABLE_NITRO=`grep "^NITRO Enabled" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
}

if [ -f /data/tweakaio/tweakaio.conf ]; then
	# fix parfile permission
	chmod 0777 /data/tweakaio/tweakaio.conf
	RESET=`grep "^Reset Settings" $parfile | awk -F "=" '{ print $2 }' | sed 's/[^a-z]//g'`
	if [ "$RESET" == "on" ]; then
		echo "$date Reset settings to factory defaults..." >> $deflog
		pfcreate
	fi
	echo "$date Params file found" >> $deflog
	echo "$date Reading variables from the parfile..." >> $deflog
	readvar
else
	echo "$date Something is really wrong" >> $deflog
	echo "$date ERROR: params file not found!" >> $deflog
	echo "$date ERROR: PROGRAM ABORTED!" >> $deflog
	exit 0
fi

# Checking Script Mode
if [ ! "$SCRIPT_ENABLE" == "on" ]; then
	echo "$date Script is disabled in the params file!" >> $deflog
	echo "$date WARNING: PROGRAM EXIT NOW!" >> $deflog
	exit 1
fi

etweak()
{
	if [ -f $1 ]; then
		echo "$date Original: $1 = "`cat $1` >> $deflog
		echo $2 > $1
		echo -e "$date Tweaked: $1 = "`cat $1`"\n" >> $deflog
	fi
}

sysctl_proc()
{
	echo "$date Original: "`sysctl -e $1` >> $deflog
	sysctl -w $1=$2
	echo -e "$date Tweaked: "`sysctl -e $1`"\n" >> $deflog
}

##########################################
# Basic Memory Management and LMK Tweaks #
##########################################
TOTALMEM=`free | grep Mem | awk -F " " '{ print $2 }' | sed 's/[^0-9]//g'`

basic_mem_tweaks()
{
if [ -z "$LMK_MODE" ]; then
	LMK_MODE="str"
fi
	# Strict minfree handler tweak
	etweak /sys/module/lowmemorykiller/parameters/adj 0,1,2,4,6,15
	echo "$date Lowmemorykiller mode is: $LMK_MODE" >> $deflog
	if [ "$LMK_MODE" == "def" ]; then etweak /sys/module/lowmemorykiller/parameters/minfree $def; fi
	if [ "$LMK_MODE" == "std" ]; then etweak /sys/module/lowmemorykiller/parameters/minfree $std; fi
	if [ "$LMK_MODE" == "opt" ]; then etweak /sys/module/lowmemorykiller/parameters/minfree $opt; fi
	if [ "$LMK_MODE" == "str" ]; then etweak /sys/module/lowmemorykiller/parameters/minfree $str; fi
	if [ "$LMK_MODE" == "aggr" ]; then etweak /sys/module/lowmemorykiller/parameters/minfree $aggr; fi
	if [ "$LMK_MODE" == "extr" ]; then etweak /sys/module/lowmemorykiller/parameters/minfree $extr; fi
	if [ "$LMK_MODE" == "ult" ]; then etweak /sys/module/lowmemorykiller/parameters/minfree $ult; fi
}

##################
# Network Tweaks #
##################
network_tweaks()
{
	sysctl_proc net.ipv4.ip_no_pmtu_disc 0
	sysctl_proc net.ipv4.tcp_ecn 0
	sysctl_proc net.ipv4.tcp_timestamps 0
	sysctl_proc net.ipv4.tcp_no_metrics_save 1
	sysctl_proc net.ipv4.tcp_tw_recycle 1
	sysctl_proc net.ipv4.tcp_tw_reuse 1
	sysctl_proc net.ipv4.tcp_sack 1
	sysctl_proc net.ipv4.tcp_window_scaling 0
	sysctl_proc net.ipv4.tcp_max_tw_buckets 360000
	sysctl_proc net.ipv4.tcp_moderate_rcvbuf 1
	sysctl_proc net.ipv4.tcp_reordering 5
	sysctl_proc net.ipv4.tcp_rfc1337 1
	sysctl_proc net.ipv4.tcp_slow_start_after_idle 0
	sysctl_proc net.ipv4.tcp_sack 1
	sysctl_proc net.ipv4.tcp_fack 1
	echo 4096 87380 174760 > /proc/sys/net/ipv4/tcp_rmem
	echo 4096 16384 131072 > /proc/sys/net/ipv4/tcp_wmem
	sysctl_proc net.ipv4.udp_rmem_min 6144
	sysctl_proc net.ipv4.udp_wmem_min 6144
	sysctl_proc net.ipv4.tcp_window_scaling 1
	sysctl_proc net.ipv4.tcp_congestion_control cubic
	sysctl_proc net.ipv4.conf.all.rp_filter 1
	sysctl_proc net.ipv4.conf.default.rp_filter 1
	sysctl_proc net.ipv4.tcp_synack_retries 2
	sysctl_proc net.ipv4.tcp_syn_retries 3
	sysctl_proc net.ipv4.tcp_max_syn_backlog 1024
	sysctl_proc net.ipv4.tcp_max_tw_buckets 16384
	sysctl_proc net.ipv4.icmp_echo_ignore_all 1
	sysctl_proc net.ipv4.icmp_ignore_bogus_error_responses 1
	sysctl_proc net.ipv4.tcp_no_metrics_save 1
	sysctl_proc net.ipv4.tcp_fin_timeout 15
	sysctl_proc net.ipv4.tcp_keepalive_intvl 30
	sysctl_proc net.ipv4.tcp_keepalive_probes 5
	sysctl_proc net.ipv4.tcp_keepalive_time 1200
	sysctl_proc net.ipv4.ip_forward 0
	sysctl_proc net.ipv4.conf.default.accept_source_route 0
	sysctl_proc net.ipv4.conf.default.accept_redirects 0
	sysctl_proc net.ipv4.conf.default.secure_redirects 0
	sysctl_proc net.ipv4.conf.all.accept_source_route 0
	sysctl_proc net.ipv4.conf.all.accept_redirects 0
	sysctl_proc net.ipv4.conf.all.secure_redirects 0
	sysctl_proc net.core.wmem_default 65535
	sysctl_proc net.core.wmem_max 131071
	sysctl_proc net.core.rmem_default 65535
	sysctl_proc net.core.rmem_max 131071
	sysctl_proc net.core.netdev_max_backlog 262144
	sysctl_proc net.core.somaxconn 262144
	sysctl_proc net.core.optmem_max 20480
	sysctl_proc net.unix.max_dgram_qlen 50
}

#############
# VM Tweaks #
#############
vm_tweaks()
{
	# Disable normalized sleeper
	mount -t debugfs none /sys/kernel/debug
	echo NO_NORMALIZED_SLEEPER > /sys/kernel/debug/sched_features
	etweak /proc/sys/vm/dirty_writeback_centisecs 2000
	etweak /proc/sys/vm/dirty_expire_centisecs 1000
	etweak /proc/sys/vm/dirty_ratio 90
	etweak /proc/sys/vm/dirty_background_ratio 5
	etweak /proc/sys/vm/mmap_min_addr 4096
	etweak /sys/devices/system/cpu/sched_mc_power_savings 1
}

ksm()
{
	# Activate Kernel Samepage Merging
	etweak /sys/kernel/mm/ksm/sleep_millisecs 2000
	etweak /sys/kernel/mm/ksm/pages_to_scan 128
	etweak /sys/kernel/mm/ksm/run 1
}

ccache()
{
if [ -z "$COMPCACHE_SIZE" ]; then
	COMPCACHE_SIZE="50"
fi
if [ -z "$COMPCACHE_RATIO" ]; then
	COMPCACHE_RATIO="20"
fi
if [ -z "$CACHE_DROP_INTERVAL" ]; then
	CACHE_DROP_INTERVAL="4"
fi
	# COMPCACHE management
	ccache_proc()
	{
		zram_init()
		{
			echo "$date Disable swap" >> $complog
			swapoff /dev/block/zram0
			echo "$date Reset swap state" >> $complog
			echo 1 > /sys/block/zram0/reset
			echo "$date Enable system property" >> $complog
			setprop persist.compcache.user 1
			setprop persist.service.compcache 1
			COMPUS=`getprop persist.compcache.user`
			COMPSER=`getprop persist.service.compcache`
			echo "$date Verify system property" >> $complog
			if [ "$COMPUS" == "1" -a "$COMPSER" == "1" ]; then
				echo "$date System property setup complete" >> $complog
			else
				echo "$date ERROR: System property setup is incomplete!" >> $complog
			fi
			echo "$date drop cache" >> $complog
			sync; sysctl -w vm.drop_caches=3 > /dev/null
			echo "$date Tweak swappiness and vfs_cache_pressure" >> $complog
			etweak /proc/sys/vm/swappiness 100
			etweak /proc/sys/vm/vfs_cache_pressure 100
			echo "$date Set zram disksize to $(($COMPCACHE_SIZE))MB" >> $complog
			echo $(($1*1024*1024)) > /sys/block/zram0/disksize
			echo "$date Verify disksize..." >> $complog
			COMPCACHE_SIZE_SET=$((`cat /sys/block/zram0/disksize`/1024/1024))
			if [ "$COMPCACHE_SIZE_SET" == "$COMPCACHE_SIZE" ]; then
				echo "$date Compcache size is match" >> $complog
			else
				echo "$date ERROR: Compcache size not match!" >> $complog
			fi
			echo "$date format swap" >> $complog
			mkswap /dev/block/zram0 > /dev/null
			echo "$date enable swap" >> $complog
			swapon /dev/block/zram0
			echo "$date Compcache initialization successfully completed!" >> $complog
		}
		#check zram is a block device?
		if [ -b "/dev/block/zram0" ]; then
			echo "$date Found zram device!" >> $complog
			echo "$date Starting zram init..." >> $complog
			zram_init $COMPCACHE_SIZE
		# check zram is a module?
		elif [ -f "/system/lib/modules/zram.ko" ]; then
			echo "$date zram device not found, trying to load from module..." >> $complog
			modprobe zram
			if [ -b "/dev/block/zram0" ]; then
				echo "$date Found zram device!" >> $complog
				echo "$date Starting zram init..." >> $complog
				zram_init $COMPCACHE_SIZE
			else
				echo "$date ERROR: zram module not loaded!" >> $complog
			fi
		fi
		# Cron job for periodically cache drop
		mkdir -p /data/cron
		echo "* */$CACHE_DROP_INTERVAL * * * sync; sysctl -w vm.drop_caches=3" > /data/cron/root
		/system/xbin/crond -b -l 0 -c /data/cron -L /data/cron/cron.log
	}
		if [ "$COMPCACHE_SIZE" == "auto" ]; then
			COMPCACHE_SIZE=$(($TOTALMEM*$COMPCACHE_RATIO/102400))
			echo "$date Using Compcache auto management mode..." >> $complog
			echo "$date Compcache ratio is $(($COMPCACHE_RATIO))%" >> $complog
			echo "$date Total memory is $(($TOTALMEM/1024))MB" >> $complog
			echo "$date Used Compcache size is $(($COMPCACHE_SIZE))MB" >> $complog
			ccache_proc
		else
			echo "$date Compcache in static mode size is $(($COMPCACHE_SIZE))MB" >> $complog
			ccache_proc
		fi
}

#######################
# Mount Option Tweaks #
#######################
mount_tweaks()
{
	# Remount with noatime and nodiratime
	busybox mount -o remount,rw,noauto_da_alloc /system /system
	busybox mount -o remount,rw,noatime,noauto_da_alloc,nosuid,nodev,nodiratime,barrier=0,nobh /data /data
	busybox mount -o remount,rw,noatime,noauto_da_alloc,nosuid,nodev,nodiratime,barrier=0,nobh /cache /cache
	etweak /sys/block/mmcblk0/queue/scheduler $SCHEDULER
	etweak /sys/block/mmcblk1/queue/scheduler $SCHEDULER
	echo 2048 > /sys/devices/virtual/bdi/179:0/read_ahead_kb
}

##################
# Dalvik cleaner #
##################
dalvik_cleaner()
{
	mount -o remount,rw /system
	mount -o remount,rw /data
	DALVIK=dalviknotfound
	echo "$date Starting Dalvik Cleaner" >> $deflog
	echo "$date Checking where dalvik exists" >> $deflog
	if [ -e "/data/dalvik-cache/system@framework@services.jar@classes.dex" ]; then
		DALVIK=/data/dalvik-cache
		echo "$date Dalvik found on Data" >> $deflog
	fi

	if [ "$DALVIK" != "dalviknotfound" ]; then
		cd "$DALVIK"
		echo "$date Checking Dex entries from /data/app" >> $deflog
		for dex in data@app@*.dex; do
			apk=`echo "$dex" | sed "s/data@app@//g" | sed "s/@classes.*//g"`
			if [ ! -e "/data/app/$apk" ]; then
				echo "$date Outdated dex found for $dex removing..." >> $deflog
				rm $dex
			fi
		done
		echo "$date Outdated dex not found/removed from /data/app" >> $deflog

		echo "$date Checking Dex entries from /system/app" >> $deflog
		for dex in system@app@*.dex; do
			apk=`echo "$dex" | sed "s/system@app@//g" | sed "s/@classes.*//g"`
				if [ ! -e "/system/app/$apk" ]; then
					echo "$date Outdated dex found for $dex removing..." >> $deflog
					rm $dex
				fi
		done
		echo "$date Outdated dex not found/removed from /system/app" >> $deflog

		echo "$date Checking Dex entries from /system/framework" >> $deflog
		for dex in system@framework@*.dex; do
			jar=`echo "$dex" | sed "s/system@framework@//g" | sed "s/@classes.*//g"`
				if [ ! -e "/system/framework/$jar" ]; then
					echo "$date Outdated dex found for $dex removing..." >> $deflog
					rm $dex
				fi
		done
		echo "$date Outdated dex not found/removed from /system/framework" >> $deflog
	else
		echo "$date No framework found, hopefully this is first boot" >> $deflog
	fi
	echo "$date Remount the system partition as read-only" >> $deflog
	mount -o remount,ro /system
	echo "$date Dalvik-Celaner completed succesfuly" >> $deflog
}

####################
# SQLite defragger #
####################
sqlidefrag()
{
	echo "$date SQLite Defragger Start" >> $deflog
	if [ -e /system/xbin/sqlite3 -o \
		 -e /system/bin/sqlite3 ]; then
		echo "$date SQLite3 binary found!" >> $deflog
		echo "$date Starting defrag process..." >> $deflog
			for i in `find /data -iname "*.db"`; do
				/system/xbin/sqlite3 $i 'VACUUM;';
			done
		echo "$date Defrag process completed" >> $deflog
	else
		echo "$date WARNING: SQLite3 binary not found!" >> $deflog
		echo "$date Skipping defrag process" >> $deflog
	fi
}

#####################
# Vibrator strength #
#####################
vibrastr()
{
	VIBRA_STROLD=`cat /sys/devices/virtual/misc/vibratorcontrol/vibrator_strength | sed 's/[^0-9]//g'`
	if [[ "$VIBRA_STR" -ne "$VIBRA_STROLD" ]]; then
		echo "$date Adjusting vibrator strength to: $VIBRA_STR" >> $deflog
		echo $VIBRA_STR > /sys/devices/virtual/misc/vibratorcontrol/vibrator_strength
	fi
}

#######
# OTF #
#######
otf()
{
	echo "$date OTF enabled" >> $deflog
	echo "$date Checking OTF kernel support..." >> $deflog
	if [ -d "/sys/devices/virtual/misc/cpu1control" ]; then
		echo "$date OTF is supported by the kernel" >> $deflog
		# Initialization & Boot time part
		# CPU1 deactivation threshold
		if [ $onminkhz -lt $onminkhzmin -o $onminkhz -gt $onminkhzmax ]; then
			echo "$date WARNING: Your CPU1 deactivation threshold freq is out of the safe range!" >> $deflog
			echo $onminkhzdef > /sys/class/misc/cpu1control/onminkhz
			echo "$date CPU1 deactivation threshold freq set to $onminkhzdef by default" >> $deflog
		else
			echo "$date CPU1 deactivation threshold freq within the acceptable range" >> $deflog
			echo $onminkhz > /sys/class/misc/cpu1control/onminkhz
			echo "$date CPU1 deactivation threshold freq = "`cat /sys/class/misc/cpu1control/onminkhz | sed 's/[^0-9]//g'` >> $deflog
		fi
		if [ $ondelay -lt $ondelaymin -o $ondelay -gt $ondelaymax ]; then
			echo "$date WARNING: Your CPU1 deactivation delay is out of the safe range!" >> $deflog
			echo $ondelaydef > /sys/class/misc/cpu1control/ondelay
			echo "$date CPU1 deactivation delay set to $ondelaydef by default" >> $deflog
		else
			echo "$date CPU1 deactivation delay within the acceptable range" >> $deflog
			echo $ondelay > /sys/class/misc/cpu1control/ondelay
			echo "$date CPU1 deactivation delay = "`cat /sys/class/misc/cpu1control/ondelay | sed 's/[^0-9]//g'` >> $deflog
		fi
		# CPU1 activation threshold
		if [ $offmaxkhz -lt $offmaxkhzmin -o $offmaxkhz -gt $offmaxkhzmax ]; then
			echo "$date WARNING: Your CPU1 activation threshold freq is out of the safe range!" >> $deflog
			echo $offmaxkhzdef > /sys/class/misc/cpu1control/offmaxkhz
			echo "$date CPU1 activation threshold freq set to $offmaxkhzdef by default" >> $deflog
		else
			echo "$date CPU1 activation threshold freq within the acceptable range" >> $deflog
			echo $offmaxkhz > /sys/class/misc/cpu1control/offmaxkhz
			echo "$date CPU1 activation threshold freq = "`cat /sys/class/misc/cpu1control/offmaxkhz | sed 's/[^0-9]//g'` >> $deflog
		fi
		if [ $offdelay -lt $offdelaymin -o $offdelay -gt $offdelaymax ]; then
			echo "$date WARNING: Your CPU1 activation delay is out of the safe range!" >> $deflog
			echo $offdelaydef > /sys/class/misc/cpu1control/offdelay
			echo "$date CPU1 activation delay set to $offdelaydef by default" >> $deflog
		else
			echo "$date CPU1 activation delay within the acceptable range" >> $deflog
			echo $offdelay > /sys/class/misc/cpu1control/offdelay
			echo "$date CPU1 activation delay = "`cat /sys/class/misc/cpu1control/offdelay | sed 's/[^0-9]//g'` >> $deflog
		fi
		# Nitro flag check
		if [ "$ENABLE_NITRO" == "on" ]; then
			echo "$date NITRO mode enabled! Battery drain is highly increased for sure!" >> $deflog
			echo "1" > /sys/class/misc/nitrocontrol/nitro
		fi
	else
		echo "$date WARNING: OTF is unsupported by this kernel!" >> $deflog
	fi
}

########################
# Procedures ends here #
########################

sysctl -p /etc/sysctl.conf

if [ "$ENABLE_LMK_TWEAK" == "on" ]; then
	basic_mem_tweaks
fi
if [ "$ENABLE_NET_TWEAKS" == "on" ]; then
	network_tweaks
fi
if [ "$ENABLE_VM_TWEAKS" == "on" ]; then
	vm_tweaks
fi
if [ "$ENABLE_KSM" == "on" ]; then
	ksm
fi
if [ "$ENABLE_MOUNT_TWEAKS" == "on" ]; then
	mount_tweaks
fi
if [ "$ENABLE_COMPCACHE" == "on" ]; then
	ccache
else
	setprop persist.compcache.user 0
	setprop persist.service.compcache 0
fi
if [ "$ENABLE_LOGGER" == "off" -a -e /dev/log/main ]; then
	rm /dev/log/main
fi
if [ "$ENABLE_DALVIK_CLEANER" == "on" ]; then
	dalvik_cleaner
fi
if [ "$ENABLE_SQLITE_DEFRAG" == "on" ]; then
	sqlidefrag
fi

	vibrastr

if [ "$ENABLE_OTF" == "on" ]; then
	otf
fi

exit 1
